// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https: //docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https: //nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html
/ {
	aliases {
        respin = "/epd_out/res";
        cspin = "/epd_out/cs";
        dcpin = "/epd_out/dc";
        busypin = "/epd_in/busy";
    };
	epd_out {
		compatible = "gpio-leds";
		res {
			gpios = <&gpio0 17 GPIO_ACTIVE_HIGH>;
			label = "EDP_RES";
		};
		cs {
			gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
			label = "EDP_CS";
		};
		dc {
			gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
			label = "EDP_DC";
		};
	};

	epd_in {
		compatible = "gpio-keys";
		busy {
			gpios = <&gpio1 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			label = "EDP_BUSY";
		};
	};
	
};


&spi1_default {
	group1 {
		psels = <NRF_PSEL(SPIM_SCK, 0, 31)>,
		        <NRF_PSEL(SPIM_MOSI, 0, 30)>,
		        <NRF_PSEL(SPIM_MISO, 0, 29)>;
	};
};

&spi1_sleep {
	group1 {
		psels = <NRF_PSEL(SPIM_SCK, 0, 31)>,
		        <NRF_PSEL(SPIM_MOSI, 0, 30)>,
		        <NRF_PSEL(SPIM_MISO, 0, 29)>;
		low-power-enable;
	};
};

epd_spi: &spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	// cs-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
	epd: epd@0 {
		compatible = "bosch,bme280";
		reg = <0>;
		spi-max-frequency = <10000000>;
	};
};
&clock {
	status = "okay";
};


&spi1 {
        max-frequency = <DT_FREQ_M()>;
};

&spi1 {
        max-frequency = <DT_FREQ_M(1)>;
};

&spi1 {
        max-frequency = <DT_FREQ_M(10)>;
};

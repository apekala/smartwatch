// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https: //docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https: //nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

#include <dt-bindings/regulator/npm1300.h>

// buttons and led
&button0 {
	gpios = <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
};

&button1 {
	gpios = <&gpio0 31 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
};

&button2 {
	gpios = <&gpio0 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
};

&button3 {
	gpios = <&gpio0 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
};

&led0 {
	gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>;
};

// BMA456
&spi1_default {
	group1 {
		psels = <NRF_PSEL(SPIM_SCK, 0, 7)>,
		        <NRF_PSEL(SPIM_MOSI, 0, 4)>,
		        <NRF_PSEL(SPIM_MISO, 1, 8)>;
	};
};

&spi1_sleep {
	group1 {
		psels = <NRF_PSEL(SPIM_SCK, 0, 7)>,
		        <NRF_PSEL(SPIM_MOSI, 0, 4)>,
		        <NRF_PSEL(SPIM_MISO, 1, 8)>;
		low-power-enable;
	};
};

bma_spi: &spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	cs-gpios = <&gpio0 8 GPIO_ACTIVE_LOW>;
	bma456: bma456@0 {
		compatible = "bosch,bme280";
		reg = <0>;
		spi-max-frequency = <8000000>;
	};
};


// UART - USB
uart0_default: &uart0_default {
	group1 {
		psels = <NRF_PSEL(UART_TX, 0, 17)>,
			<NRF_PSEL(UART_RTS, 0, 16)>;
	};
	group2 {
		psels = <NRF_PSEL(UART_RX, 0, 12)>,
			<NRF_PSEL(UART_CTS, 0, 28)>;
		bias-pull-up;
	};
};

uart0_sleep: &uart0_sleep {
	group1 {
		psels = <NRF_PSEL(UART_TX, 0, 17)>,
			<NRF_PSEL(UART_RX, 0, 12)>,
			<NRF_PSEL(UART_RTS, 0, 16)>,
			<NRF_PSEL(UART_CTS, 0, 28)>;
		low-power-enable;
	};
};


&rtc2 {
	status = "okay";
};

// // NPM1300
&i2c0 {  
    npm1300: npm1300@6b{
        compatible = "i2c-device";
        status = "okay";
        reg = < 0x6b >;
    };
};

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 1)>,
                	<NRF_PSEL(TWIM_SCL, 0, 27)>;
        };
    };
};

&i2c0_default {
	group1 {
		bias-pull-up;
	};
};


